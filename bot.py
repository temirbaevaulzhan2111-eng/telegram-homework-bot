import os
import telebot
from flask import Flask, request
import logging

# ==================== –ù–ê–°–¢–†–û–ô–ö–ò ====================
TOKEN = os.environ.get("TELEGRAM_TOKEN")  # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ @BotFather
MY_ID = 1464067257  # —Ç–≤–æ–π Telegram ID
RENDER_URL = os.environ.get("RENDER_URL")  # URL –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Render, –Ω–∞–ø—Ä–∏–º–µ—Ä https://–∏–º—è.onrender.com

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –µ—Å—Ç—å
if not TOKEN or not RENDER_URL:
    raise SystemExit("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –∑–∞–¥–∞–Ω—ã TELEGRAM_TOKEN –∏–ª–∏ RENDER_URL –≤ Render Environment Variables")

# ==================== –õ–û–ì–ò ====================
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)

# ==================== –ë–û–¢ + FLASK ====================
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    logger.info("–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start")
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ —Å–≤–æ—ë –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ üìö")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    logger.info("–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ")
    caption = message.caption if message.caption else "(–±–µ–∑ –ø–æ–¥–ø–∏—Å–∏)"
    file_id = message.photo[-1].file_id

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∫—É—Ä–∞—Ç–æ—Ä—É
    try:
        bot.send_photo(MY_ID, file_id, caption=f"üì∏ –û—Ç {message.from_user.first_name}:\n{caption}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Ñ–æ—Ç–æ: {e}")

    # –û—Ç–≤–µ—Ç —É—á–µ–Ω–∏–∫—É
    bot.send_message(message.chat.id, "‚úÖ –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é!")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler(content_types=['text'])
def handle_text(message):
    logger.info("–ü–æ–ª—É—á–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫—É—Ä–∞—Ç–æ—Ä—É
    try:
        bot.send_message(MY_ID, f"‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.first_name}: {message.text}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Ç–µ–∫—Å—Ç–∞: {e}")

    # –û—Ç–≤–µ—Ç —É—á–µ–Ω–∏–∫—É
    bot.send_message(message.chat.id, "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é!")

# –í–µ–±—Ö—É–∫
@app.route('/' + TOKEN, methods=['POST'])
def webhook():
    if request.headers.get("content-type") == "application/json":
        json_str = request.data.decode("utf-8")
        update = telebot.types.Update.de_json(json_str)
        bot.process_new_updates([update])
        return "", 200
    return "OK", 200

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route('/')
def index():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫
try:
    bot.remove_webhook()
    bot.set_webhook(url=RENDER_URL + '/' + TOKEN)
    logger.info("–í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≤–µ–±—Ö—É–∫–∞: {e}")

# –ó–∞–ø—É—Å–∫ (–ª–æ–∫–∞–ª—å–Ω–æ)
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))



